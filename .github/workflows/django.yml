name: Django CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  DB: postgres
  ENGINE: django.db.backends.postgresql_psycopg2
  DATABASE_NAME: mydb_test
  DATABASE_HOST: localhost
  DJANGO_KEY: ")vzug)78j&h83(=h^&=@n%b(()ai!dryu!88++oij_)gl9oa1_"
  DEBUG: False
  MAILGUN_ACCESS_KEY: ${{ secrets.MAILGUN_ACCESS_KEY }}
  MAILGUN_SERVER_NAME: ${{ secrets.MAILGUN_SERVER_NAME }}
  DB_USER: postgres
  DB_PASS: postgres
  PGPASSWORD: postgres
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        # will assign a random free host port
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up
      run: |
        psql -p ${{ job.services.postgres.ports[5432] }} -h localhost -c 'create database mydb_test;' -U postgres
        python3 manage.py waffle_switch Result off --create
        python3 manage.py makemigrations
        python3 manage.py migrate
        python manage.py collectstatic
      env:
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
    - name: Run Tests
      run: |
        python manage.py test
      env:
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
